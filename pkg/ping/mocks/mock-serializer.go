// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/ping/serializer.go

// Package ping is a generated GoMock package.
package ping

import (
	bytes "bytes"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockSerializer is a mock of Serializer interface.
type MockSerializer struct {
	ctrl     *gomock.Controller
	recorder *MockSerializerMockRecorder
}

// MockSerializerMockRecorder is the mock recorder for MockSerializer.
type MockSerializerMockRecorder struct {
	mock *MockSerializer
}

// NewMockSerializer creates a new mock instance.
func NewMockSerializer(ctrl *gomock.Controller) *MockSerializer {
	mock := &MockSerializer{ctrl: ctrl}
	mock.recorder = &MockSerializerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSerializer) EXPECT() *MockSerializerMockRecorder {
	return m.recorder
}

// Serialize mocks base method.
func (m *MockSerializer) Serialize() *bytes.Buffer {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Serialize")
	ret0, _ := ret[0].(*bytes.Buffer)
	return ret0
}

// Serialize indicates an expected call of Serialize.
func (mr *MockSerializerMockRecorder) Serialize() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Serialize", reflect.TypeOf((*MockSerializer)(nil).Serialize))
}
