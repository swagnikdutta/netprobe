// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/ping/dialer.go

// Package ping is a generated GoMock package.
package ping

import (
	net "net"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockNetworkDialer is a mock of NetworkDialer interface.
type MockNetworkDialer struct {
	ctrl     *gomock.Controller
	recorder *MockNetworkDialerMockRecorder
}

// MockNetworkDialerMockRecorder is the mock recorder for MockNetworkDialer.
type MockNetworkDialerMockRecorder struct {
	mock *MockNetworkDialer
}

// NewMockNetworkDialer creates a new mock instance.
func NewMockNetworkDialer(ctrl *gomock.Controller) *MockNetworkDialer {
	mock := &MockNetworkDialer{ctrl: ctrl}
	mock.recorder = &MockNetworkDialerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNetworkDialer) EXPECT() *MockNetworkDialerMockRecorder {
	return m.recorder
}

// Dial mocks base method.
func (m *MockNetworkDialer) Dial(network, address string) (net.Conn, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Dial", network, address)
	ret0, _ := ret[0].(net.Conn)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Dial indicates an expected call of Dial.
func (mr *MockNetworkDialerMockRecorder) Dial(network, address interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Dial", reflect.TypeOf((*MockNetworkDialer)(nil).Dial), network, address)
}
